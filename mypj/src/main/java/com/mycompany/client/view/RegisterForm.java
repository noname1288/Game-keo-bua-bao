/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.client.view;

import com.mycompany.client.control.ClientSocket;
import com.mycompany.client.model.ClientState;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author quang
 */
public class RegisterForm extends javax.swing.JPanel {

    /**
     * Creates new form RegisterFrom
     *
     * @param client
     */
    public RegisterForm(ClientSocket client) {
        initComponents();
        this.client = client;
        checkDuplicate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Đăng Ký");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 0, -1, -1));

        jLabel2.setText("Tên Đăng Nhập :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        jLabel3.setText("Mật Khẩu :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));

        jLabel4.setText("Nhập Lại Mật Khẩu :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 150, -1));
        add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 150, -1));
        add(jPasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 150, -1));

        jLabel5.setText("Email :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 150, -1));

        jButton1.setText("Đăng Ký");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, -1));

        jLabel6.setText("Tên Người Chơi:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));
        add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 150, -1));

        jLabel7.setText("");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 28, 265, -1));

        jLabel8.setText("");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 268, -1));

        jLabel9.setText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 215, 268, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String username = jTextField1.getText();
        String password = new String(jPasswordField1.getPassword());
        String repassword = new String(jPasswordField2.getPassword());
        String email = jTextField2.getText();
        String playerName = jTextField3.getText();
        if (password.equals(repassword) && client.getState()!=ClientState.HV_DUP) {
            client.register(username, password, email, playerName);
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (client.getState()==ClientState.REGISTER_FAILED) {
                JOptionPane.showMessageDialog(
                        this,
                        "Vui lòng thử lại sau!",
                        "LỖI MÁY CHỦ",
                        HEIGHT
                );
            } 
            else if(client.getState()==ClientState.REGISTER_SUCCESS) {
                Container parent = this.getParent();
                loginFrom = new LoginForm(client);
                loginFrom.setBounds(0, 0, 400, 300);
                loginFrom.setVisible(true);
                parent.remove(this);
                parent.add(loginFrom);
                parent.revalidate();
                parent.repaint();
            }
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng nhập lại mật khẩu!",
                    "SAI MẬT KHẨU",
                    HEIGHT
            );
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
    private void checkDuplicate() {
        // tạo thời gian chờ 5s
        Timer timer = new Timer(1000, (ActionEvent e) -> {
            try {
                checkField(currentField); // Chỉ kiểm tra trường mà người dùng đã nhập gần nhất
            } catch (InterruptedException ex) {
                Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        // không lặp lại khi chạy xong
        timer.setRepeats(false);

        //kiểm tra trường đang được nhập và khởi động lại timer
        KeyAdapter keyAdapter = new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                JTextField source = (JTextField) e.getSource();
                if (source == jTextField1) {
                    currentField = "username";
                } else if (source == jTextField2) {
                    currentField = "email";
                } else if (source == jTextField3) {
                    currentField = "playerName";
                }
                timer.restart(); // Khởi động lại thời gian mỗi lần nhập
            }
        };
        // thêm sự kiện nhập vào các trường
        jTextField1.addKeyListener(keyAdapter);
        jTextField2.addKeyListener(keyAdapter);
        jTextField3.addKeyListener(keyAdapter);
    }

    //lấy kết quả từ server và hiển thị thông báo nếu trùng lặp.
    private void checkField(String field) throws InterruptedException {
        switch (field) {
            case "username" -> {
                String username = jTextField1.getText();
                if (!username.isEmpty()) {
                    client.checkDuplicates(
                            "USERNAME",
                            username
                    );
                    Thread.sleep(100);
                    if (client.getState()==ClientState.HV_DUP) {
                        jLabel7.setText("Tên đăng nhập đã được sử dụng");
                    } 
                    else if (client.getState()==ClientState.NO_DUP) {
                        jLabel7.setText("");
                    }
                }
                break;
            }
            case "email" -> {
                String email = jTextField2.getText();
                if (!email.isEmpty()) {
                    client.checkDuplicates(
                            "EMAIL",
                            email
                    );
                    Thread.sleep(100);
                    if (client.getState()==ClientState.HV_DUP) {
                        jLabel8.setText("Email đã được sử dụng");
                    } 
                    else if (client.getState()==ClientState.NO_DUP) {
                        jLabel8.setText("");
                    }
                }
                break;
            }
            case "playerName" -> {
                String playerName = jTextField3.getText();
                if (!playerName.isEmpty()) {
                    client.checkDuplicates(
                            "PLAYER_NAME",
                            playerName
                    );
                    Thread.sleep(100);
                    if (client.getState()==ClientState.HV_DUP) {
                        jLabel9.setText("Tên người chơi đã được sử dụng");
                    }
                    else if (client.getState()==ClientState.NO_DUP) {
                        jLabel9.setText("");
                    }
                }
                break;
            }
            default -> {
                break;
            }
        }
    }
    
    private LoginForm loginFrom;
    private final ClientSocket client;
    private String currentField = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
